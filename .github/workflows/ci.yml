name: Nix build

on:
  pull_request:
  push:
    branches:
      - master

env:
  nix-conf: |-
    accept-flake-config = true
    always-allow-substitutes = true
    builders-use-substitutes = true
    max-jobs = auto

jobs:
  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '.#githubActions.matrix')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  nix-build:
    name: ${{ matrix.name }} (${{ matrix.system }})
    needs: nix-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJSON(needs.nix-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@v17
        with:
          extra-conf: ${{ env.nix-conf }}
      - uses: cachix/cachix-action@v14
        with:
          name: luciofranco-nix-config
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          extraPullNames: luciofranco-vim-config, nix-community
      - run: |
          nix run .#nix-fast-build -- --no-nom --skip-cached --retries=3 --flake '.#${{ matrix.attr }}'
