name: ci
on:
  push:
    branches:
      - master
      - try
  pull_request:
jobs:
  lints:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: false
      - uses: DeterminateSystems/nix-installer-action@v2
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: parse
        run: nix-instantiate --json --parse ./**/*.nix
      - name: lints
        run: |
          nix build -L --keep-going \
            .\#checks.x86_64-linux.pre-commit-check

  build-shell:
    name: build-shell (${{ matrix.system }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        system: ["x86_64-linux"]
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: false
      - uses: DeterminateSystems/nix-installer-action@v2
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: build-shell
        run: |
          nix run nixpkgs\#nix-build-uncached -- \
            --keep-going \
            -A "devShells.${{ matrix.system }}.default.inputDerivation"
  gen-hosts:
    runs-on: ubuntu-latest
    outputs:
      hosts: ${{ steps.get-hosts.outputs.hosts }}
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: false
      - id: gen-hosts
        run: |
          echo "hosts=$(cat "./.github/workflows/build-matrix.json")" >> "$GITHUB_OUTPUT"

  build-host:
    name: build-${{ matrix.host.host }}
    runs-on: ubuntu-latest
    needs: gen-hosts
    strategy:
      fail-fast: false
      matrix:
        host: ${{ fromJson(needs.get-hosts.outputs.hosts) }}
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: false
      - uses: DeterminateSystems/nix-installer-action@v2
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: build-host
        run: |
          nix run nixpkgs#nix-build-uncached -- \
            --keep-going \
            -A packages.${{ matrix.host.system }}.${{ matrix.host.host }}
  check:
    runs-on: ubuntu-latest
    needs: [ lints, build-host, build-shell ]
    if: always()
    steps:
      - uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
