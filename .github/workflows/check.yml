name: Nix build

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '.#githubActions.matrix')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  nix-build:
    name: ${{ matrix.name }} (${{ matrix.system }})
    needs: nix-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJSON(needs.nix-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
      - run: nix build -L '.#${{ matrix.attr }}'

  comment:
    needs: nix-build
    if: always()  # Always run regardless of test result
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN_FOR_UPDATES }}
    steps:
      - name: Summarize matrix results
        id: summary
        run: |
          for job in "${{ toJson(needs.nix-build.result) }}"; do
            echo "Got result: $job"
          done

          # GitHub doesn't provide individual matrix statuses here,
          # so we infer the top-level status of `needs.test`.

          if [ "${{ needs.nix-build.result }}" = "success" ]; then
            echo "summary=✅ All matrix jobs passed." >> "$GITHUB_OUTPUT"
          else
            echo "summary=❌ One or more matrix jobs failed." >> "$GITHUB_OUTPUT"
          fi
      - uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GH_TOKEN_FOR_UPDATES}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Hello world!'
            })

      # - name: Post PR comment
      #   if: github.event_name == 'pull_request'
      #   run: |
      #     gh pr comment ${{ github.event.pull_request.number }} \
      #       --body "${{ steps.summary.outputs.summary }}"
